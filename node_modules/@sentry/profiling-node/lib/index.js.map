{"version":3,"file":"index.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../utils/build/esm/is.js","../../utils/build/esm/worldwide.js","../../utils/build/esm/debug-build.js","../../utils/build/esm/logger.js","../../utils/build/esm/dsn.js","../../utils/build/esm/object.js","../../utils/build/esm/misc.js","../../utils/build/esm/syncpromise.js","../../utils/build/esm/time.js","../../utils/build/esm/envelope.js","../src/debug-build.ts","../../core/build/esm/debug-build.js","../../core/build/esm/constants.js","../../core/build/esm/eventProcessors.js","../../core/build/esm/session.js","../../core/build/esm/utils/spanUtils.js","../../core/build/esm/exports.js","../../core/build/esm/utils/getRootSpan.js","../../core/build/esm/tracing/dynamicSamplingContext.js","../../core/build/esm/utils/applyScopeDataToEvent.js","../../core/build/esm/scope.js","../../core/build/esm/version.js","../../core/build/esm/hub.js","../src/cpu_profiler.ts","../src/utils.ts","../src/hubextensions.ts","../src/integration.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs };\n//# sourceMappingURL=time.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'statsd',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { SyncPromise, logger, isThenable, getGlobalSingleton } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nfunction addGlobalEventProcessor(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { addGlobalEventProcessor, getGlobalEventProcessors, notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nfunction spanToJSON(span) {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n\nexport { TRACE_FLAG_NONE, TRACE_FLAG_SAMPLED, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader };\n//# sourceMappingURL=spanUtils.js.map\n","import { logger, uuid4, timestampInSeconds, isThenable, GLOBAL_OBJ } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub, runWithAsyncContext, getIsolationScope } from './hub.js';\nimport { makeSession, updateSession, closeSession } from './session.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\nfunction configureScope(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope ;\n      return callback(scope );\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nfunction withIsolationScope(callback) {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n * @deprecated This function will be removed in the next major version of the Sentry SDK.\n */\nfunction lastEventId() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, configureScope, endSession, flush, getClient, getCurrentScope, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, startTransaction, withActiveSpan, withIsolationScope, withMonitor, withScope };\n//# sourceMappingURL=exports.js.map\n","/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nfunction getRootSpan(span) {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n\nexport { getRootSpan };\n//# sourceMappingURL=getRootSpan.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getClient, getCurrentScope } from '../exports.js';\nimport { getRootSpan } from '../utils/getRootSpan.js';\nimport { spanToJSON, spanIsSampled } from '../utils/spanUtils.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) ;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient, getDynamicSamplingContextFromSpan };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { dropUndefinedKeys, arrayify } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext.js';\nimport { getRootSpan } from './getRootSpan.js';\nimport { spanToTraceContext, spanToJSON } from './spanUtils.js';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\nfunction applyDataToEvent(event, data) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\nexport { applyScopeDataToEvent, mergeAndOverwriteScopeData, mergeScopeData };\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n","import { isPlainObject, dateTimestampInSeconds, uuid4, logger } from '@sentry/utils';\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors.js';\nimport { updateSession } from './session.js';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /**\n   * Transaction Name\n   */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  /** The client on this scope */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n   static clone(scope) {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n   clone() {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n   getClient() {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext ;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n   getAttachments() {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors = [],\n  ) {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nfunction setGlobalScope(scope) {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n\nexport { Scope, getGlobalScope, setGlobalScope };\n//# sourceMappingURL=scope.js.map\n","const SDK_VERSION = '7.109.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isThenable, uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\nimport { SDK_VERSION } from './version.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n   constructor(\n    client,\n    scope,\n    isolationScope,\n      _version = API_VERSION,\n  ) {this._version = _version;\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n   bindClient(client) {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   popScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n   withScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n   getClient() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n   getScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n   getStack() {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n   setUser(user) {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n   setTags(tags) {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n   setExtras(extras) {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n   setTag(key, value) {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n   setExtra(key, extra) {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n   configureScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n   endSession() {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n   startSession(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n   shouldSendDefaultPii() {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nfunction getIsolationScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getIsolationScope, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { arch as _arch, platform as _platform } from 'os';\nimport { join, resolve } from 'path';\nimport { familySync } from 'detect-libc';\nimport { getAbi } from 'node-abi';\nimport { env, versions } from 'process';\nimport { threadId } from 'worker_threads';\n\nimport { GLOBAL_OBJ, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { PrivateV8CpuProfilerBindings, V8CpuProfilerBindings } from './types';\n\nconst stdlib = familySync();\nconst platform = process.env['BUILD_PLATFORM'] || _platform();\nconst arch = process.env['BUILD_ARCH'] || _arch();\nconst abi = getAbi(versions.node, 'node');\nconst identifier = [platform, arch, stdlib, abi].filter(c => c !== undefined && c !== null).join('-');\n\nconst built_from_source_path = resolve(__dirname, `./sentry_cpu_profiler-${identifier}`);\n\n/**\n *  Imports cpp bindings based on the current platform and architecture.\n */\n// eslint-disable-next-line complexity\nexport function importCppBindingsModule(): PrivateV8CpuProfilerBindings {\n  // If a binary path is specified, use that.\n  if (env['SENTRY_PROFILER_BINARY_PATH']) {\n    const envPath = env['SENTRY_PROFILER_BINARY_PATH'];\n    return require(envPath);\n  }\n\n  // If a user specifies a different binary dir, they are in control of the binaries being moved there\n  if (env['SENTRY_PROFILER_BINARY_DIR']) {\n    const binaryPath = join(resolve(env['SENTRY_PROFILER_BINARY_DIR']), `sentry_cpu_profiler-${identifier}`);\n    return require(`${binaryPath}.node`);\n  }\n\n  /* eslint-disable no-fallthrough */\n  // We need the fallthrough so that in the end, we can fallback to the require dynamice require.\n  // This is for cases where precompiled binaries were not provided, but may have been compiled from source.\n  if (platform === 'darwin') {\n    if (arch === 'x64') {\n      if (abi === '93') {\n        return require('./sentry_cpu_profiler-darwin-x64-93.node');\n      }\n      if (abi === '108') {\n        return require('./sentry_cpu_profiler-darwin-x64-108.node');\n      }\n      if (abi === '115') {\n        return require('./sentry_cpu_profiler-darwin-x64-115.node');\n      }\n    }\n\n    if (arch === 'arm64') {\n      if (abi === '93') {\n        return require('./sentry_cpu_profiler-darwin-arm64-93.node');\n      }\n      if (abi === '108') {\n        return require('./sentry_cpu_profiler-darwin-arm64-108.node');\n      }\n      if (abi === '115') {\n        return require('./sentry_cpu_profiler-darwin-arm64-115.node');\n      }\n    }\n  }\n\n  if (platform === 'win32') {\n    if (arch === 'x64') {\n      if (abi === '93') {\n        return require('./sentry_cpu_profiler-win32-x64-93.node');\n      }\n      if (abi === '108') {\n        return require('./sentry_cpu_profiler-win32-x64-108.node');\n      }\n      if (abi === '115') {\n        return require('./sentry_cpu_profiler-win32-x64-115.node');\n      }\n    }\n  }\n\n  if (platform === 'linux') {\n    if (arch === 'x64') {\n      if (stdlib === 'musl') {\n        if (abi === '93') {\n          return require('./sentry_cpu_profiler-linux-x64-musl-93.node');\n        }\n        if (abi === '108') {\n          return require('./sentry_cpu_profiler-linux-x64-musl-108.node');\n        }\n        if (abi === '115') {\n          return require('./sentry_cpu_profiler-linux-x64-musl-115.node');\n        }\n      }\n      if (stdlib === 'glibc') {\n        if (abi === '93') {\n          return require('./sentry_cpu_profiler-linux-x64-glibc-93.node');\n        }\n        if (abi === '108') {\n          return require('./sentry_cpu_profiler-linux-x64-glibc-108.node');\n        }\n        if (abi === '115') {\n          return require('./sentry_cpu_profiler-linux-x64-glibc-115.node');\n        }\n      }\n    }\n    if (arch === 'arm64') {\n      if (stdlib === 'musl') {\n        if (abi === '93') {\n          return require('./sentry_cpu_profiler-linux-arm64-musl-93.node');\n        }\n        if (abi === '108') {\n          return require('./sentry_cpu_profiler-linux-arm64-musl-108.node');\n        }\n        if (abi === '115') {\n          return require('./sentry_cpu_profiler-linux-arm64-musl-115.node');\n        }\n      }\n      if (stdlib === 'glibc') {\n        if (abi === '93') {\n          return require('./sentry_cpu_profiler-linux-arm64-glibc-93.node');\n        }\n        if (abi === '108') {\n          return require('./sentry_cpu_profiler-linux-arm64-glibc-108.node');\n        }\n        if (abi === '115') {\n          return require('./sentry_cpu_profiler-linux-arm64-glibc-115.node');\n        }\n      }\n    }\n  }\n  return require(`${built_from_source_path}.node`);\n}\n\nconst PrivateCpuProfilerBindings: PrivateV8CpuProfilerBindings = importCppBindingsModule();\nconst CpuProfilerBindings: V8CpuProfilerBindings = {\n  startProfiling(name: string) {\n    if (!PrivateCpuProfilerBindings) {\n      DEBUG_BUILD && logger.log('[Profiling] Bindings not loaded, ignoring call to startProfiling.');\n      return;\n    }\n\n    return PrivateCpuProfilerBindings.startProfiling(name);\n  },\n  stopProfiling(name: string) {\n    if (!PrivateCpuProfilerBindings) {\n      DEBUG_BUILD &&\n        logger.log('[Profiling] Bindings not loaded or profile was never started, ignoring call to stopProfiling.');\n      return null;\n    }\n    return PrivateCpuProfilerBindings.stopProfiling(name, threadId, !!GLOBAL_OBJ._sentryDebugIds);\n  },\n};\n\nexport { PrivateCpuProfilerBindings };\nexport { CpuProfilerBindings };\n","/* eslint-disable max-lines */\nimport * as os from 'os';\nimport type {\n  Context,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  Event,\n  EventEnvelope,\n  EventEnvelopeHeaders,\n  EventItem,\n  SdkInfo,\n  SdkMetadata,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { env, versions } from 'process';\nimport { isMainThread, threadId } from 'worker_threads';\n\nimport * as Sentry from '@sentry/node';\nimport { GLOBAL_OBJ, createEnvelope, dropUndefinedKeys, dsnToString, forEachEnvelopeItem, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Profile, ProfiledEvent, RawThreadCpuProfile, ThreadCpuProfile } from './types';\nimport type { DebugImage } from './types';\n\n// We require the file because if we import it, it will be included in the bundle.\n// I guess tsc does not check file contents when it's imported.\n// eslint-disable-next-line\nconst THREAD_ID_STRING = String(threadId);\nconst THREAD_NAME = isMainThread ? 'main' : 'worker';\nconst FORMAT_VERSION = '1';\n\n// Os machine was backported to 16.18, but this was not reflected in the types\n// @ts-expect-error ignore missing\nconst machine = typeof os.machine === 'function' ? os.machine() : os.arch();\n\n// Machine properties (eval only once)\nconst PLATFORM = os.platform();\nconst RELEASE = os.release();\nconst VERSION = os.version();\nconst TYPE = os.type();\nconst MODEL = machine;\nconst ARCH = os.arch();\n\n/**\n * Checks if the profile is a raw profile or a profile enriched with thread information.\n * @param {ThreadCpuProfile | RawThreadCpuProfile} profile\n * @returns {boolean}\n */\nfunction isRawThreadCpuProfile(profile: ThreadCpuProfile | RawThreadCpuProfile): profile is RawThreadCpuProfile {\n  return !('thread_metadata' in profile);\n}\n\n/**\n * Enriches the profile with threadId of the current thread.\n * This is done in node as we seem to not be able to get the info from C native code.\n *\n * @param {ThreadCpuProfile | RawThreadCpuProfile} profile\n * @returns {ThreadCpuProfile}\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | RawThreadCpuProfile): ThreadCpuProfile {\n  if (!isRawThreadCpuProfile(profile)) {\n    return profile;\n  }\n\n  return {\n    samples: profile.samples,\n    frames: profile.frames,\n    stacks: profile.stacks,\n    thread_metadata: {\n      [THREAD_ID_STRING]: {\n        name: THREAD_NAME,\n      },\n    },\n  };\n}\n\n/**\n * Extract sdk info from from the API metadata\n * @param {SdkMetadata | undefined} metadata\n * @returns {SdkInfo | undefined}\n */\nfunction getSdkMetadataForEnvelopeHeader(metadata?: SdkMetadata): SdkInfo | undefined {\n  if (!metadata || !metadata.sdk) {\n    return undefined;\n  }\n\n  return { name: metadata.sdk.name, version: metadata.sdk.version } as SdkInfo;\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n *\n * @param {Event} event\n * @param {SdkInfo | undefined} sdkInfo\n * @returns {Event}\n */\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name || 'unknown sdk';\n  event.sdk.version = event.sdk.version || sdkInfo.version || 'unknown sdk version';\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/**\n *\n * @param {Event} event\n * @param {SdkInfo | undefined} sdkInfo\n * @param {string | undefined} tunnel\n * @param {DsnComponents} dsn\n * @returns {EventEnvelopeHeaders}\n */\nfunction createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata['dynamicSamplingContext'];\n\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }) as DynamicSamplingContext,\n      }),\n  };\n}\n\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param {Event}\n * @returns {Profile | null}\n */\nexport function createProfilingEventFromTransaction(event: ProfiledEvent): Profile | null {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  const rawProfile = event.sdkProcessingMetadata['profile'];\n  if (rawProfile === undefined || rawProfile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${rawProfile} instead.`,\n    );\n  }\n\n  if (!rawProfile.profile_id) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile id. Got ${rawProfile.profile_id} instead.`,\n    );\n  }\n\n  if (!isValidProfile(rawProfile)) {\n    return null;\n  }\n\n  return createProfilePayload(rawProfile, {\n    release: event.release ?? '',\n    environment: event.environment ?? '',\n    event_id: event.event_id ?? '',\n    transaction: event.transaction ?? '',\n    start_timestamp: event.start_timestamp ? event.start_timestamp * 1000 : Date.now(),\n    trace_id: event.contexts?.['trace']?.['trace_id'] ?? '',\n    profile_id: rawProfile.profile_id,\n  });\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param {RawThreadCpuProfile}\n * @param {Event}\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(profile: RawThreadCpuProfile, event: Event): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile, {\n    release: event.release ?? '',\n    environment: event.environment ?? '',\n    event_id: event.event_id ?? '',\n    transaction: event.transaction ?? '',\n    start_timestamp: event.start_timestamp ? event.start_timestamp * 1000 : Date.now(),\n    trace_id: event.contexts?.['trace']?.['trace_id'] ?? '',\n    profile_id: profile.profile_id,\n  });\n}\n\n/**\n * Create a profile\n * @param {RawThreadCpuProfile} cpuProfile\n * @param {options}\n * @returns {Profile}\n */\n\nfunction createProfilePayload(\n  cpuProfile: RawThreadCpuProfile,\n  {\n    release,\n    environment,\n    event_id,\n    transaction,\n    start_timestamp,\n    trace_id,\n    profile_id,\n  }: {\n    release: string;\n    environment: string;\n    event_id: string;\n    transaction: string;\n    start_timestamp: number;\n    trace_id: string | undefined;\n    profile_id: string;\n  },\n): Profile {\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (trace_id && trace_id.length !== 32) {\n    DEBUG_BUILD && logger.log(`[Profiling] Invalid traceId: ${trace_id} on profiled event`);\n  }\n\n  const enrichedThreadProfile = enrichWithThreadInformation(cpuProfile);\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(start_timestamp).toISOString(),\n    platform: 'node',\n    version: FORMAT_VERSION,\n    release: release,\n    environment: environment,\n    measurements: cpuProfile.measurements,\n    runtime: {\n      name: 'node',\n      version: versions.node || '',\n    },\n    os: {\n      name: PLATFORM,\n      version: RELEASE,\n      build_number: VERSION,\n    },\n    device: {\n      locale: env['LC_ALL'] || env['LC_MESSAGES'] || env['LANG'] || env['LANGUAGE'] || '',\n      model: MODEL,\n      manufacturer: TYPE,\n      architecture: ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(cpuProfile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transaction: {\n      name: transaction,\n      id: event_id,\n      trace_id: trace_id || '',\n      active_thread_id: THREAD_ID_STRING,\n    },\n  };\n\n  return profile;\n}\n\n/**\n * Creates an envelope from a profiling event.\n * @param {Event} Profile\n * @param {DsnComponents} dsn\n * @param {SdkMetadata} metadata\n * @param {string|undefined} tunnel\n * @returns {Envelope|null}\n */\nexport function createProfilingEventEnvelope(\n  event: ProfiledEvent,\n  dsn: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope | null {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n  const profile = createProfilingEventFromTransaction(event);\n\n  if (!profile) {\n    return null;\n  }\n\n  const envelopeItem: EventItem = [\n    {\n      type: 'profile',\n    },\n    // @ts-expect-error profile is not part of EventItem yet\n    profile,\n  ];\n\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Check if event metadata contains profile information\n * @param {Event}\n * @returns {boolean}\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!(event.sdkProcessingMetadata && event.sdkProcessingMetadata['profile']);\n}\n\n/**\n * Due to how profiles are attached to event metadata, we may sometimes want to remove them to ensure\n * they are not processed by other Sentry integrations. This can be the case when we cannot construct a valid\n * profile from the data we have or some of the mechanisms to send the event (Hub, Transport etc) are not available to us.\n *\n * @param {Event | ProfiledEvent} event\n * @returns {Event}\n */\nexport function maybeRemoveProfileFromSdkMetadata(event: Event | ProfiledEvent): Event {\n  if (!isProfiledTransactionEvent(event)) {\n    return event;\n  }\n\n  delete event.sdkProcessingMetadata.profile;\n  return event;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n * @param {unknown} rate\n * @returns {boolean}\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Checks if the profile is valid and can be sent to Sentry.\n * @param {RawThreadCpuProfile} profile\n * @returns {boolean}\n */\nexport function isValidProfile(profile: RawThreadCpuProfile): profile is RawThreadCpuProfile & { profile_id: string } {\n  if (profile.samples.length <= 1) {\n    DEBUG_BUILD &&\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    return false;\n  }\n\n  if (!profile.profile_id) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param {Envelope} envelope\n * @param {Profile[]} profiles\n * @returns {Envelope}\n */\nexport function addProfilesToEnvelope(envelope: Envelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    // @ts-expect-error untyped envelope\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param {Envelope} envelope\n * @returns {Event[]}\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    // First item is the type, so we can skip it, everything else is an event\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j];\n\n      if (!event) {\n        // Shouldnt happen, but lets be safe\n        continue;\n      }\n\n      // @ts-expect-error profile_id is not part of the metadata type\n      const profile_id = (event.contexts as Context)?.['profile']?.['profile_id'];\n\n      if (event && profile_id) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Cross reference profile collected resources with debug_ids and return a list of debug images.\n * @param {string[]} resource_paths\n * @returns {DebugImage[]}\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = Sentry.getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options = client && client.getOptions();\n\n  if (!options || !options.stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(options.stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(options.stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id.\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = options.stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] as string;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images: DebugImage[] = [];\n\n  for (const resource of resource_paths) {\n    if (resource && filenameDebugIdMap[resource]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: resource,\n        debug_id: filenameDebugIdMap[resource] as string,\n      });\n    }\n  }\n\n  return images;\n}\n","import { getMainCarrier } from '@sentry/core';\nimport type { NodeClient } from '@sentry/node';\nimport type { CustomSamplingContext, Hub, Transaction, TransactionContext } from '@sentry/types';\nimport { logger, uuid4 } from '@sentry/utils';\n\nimport { CpuProfilerBindings } from './cpu_profiler';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isValidSampleRate } from './utils';\n\nexport const MAX_PROFILE_DURATION_MS = 30 * 1000;\n\ntype StartTransaction = (\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n) => Transaction;\n\n/**\n * Takes a transaction and determines if it should be profiled or not. If it should be profiled, it returns the\n * profile_id, otherwise returns undefined. Takes care of setting profile context on transaction as well\n */\nexport function maybeProfileTransaction(\n  client: NodeClient | undefined,\n  transaction: Transaction,\n  customSamplingContext?: CustomSamplingContext,\n): string | undefined {\n  // profilesSampleRate is multiplied with tracesSampleRate to get the final sampling rate. We dont perform\n  // the actual multiplication to get the final rate, but we discard the profile if the transaction was sampled,\n  // so anything after this block from here is based on the transaction sampling.\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    return;\n  }\n\n  // Client and options are required for profiling\n  if (!client) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no client found.');\n    return;\n  }\n\n  const options = client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return;\n  }\n\n  const profilesSampler = options.profilesSampler;\n  let profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Prefer sampler to sample rate if both are provided.\n  if (typeof profilesSampler === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    profilesSampleRate = profilesSampler({ transactionContext: transaction.toContext(), ...customSamplingContext });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because ${\n          typeof profilesSampler === 'function'\n            ? 'profileSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or profileSampleRate is set to 0'\n        }`,\n      );\n    return;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return;\n  }\n\n  const profile_id = uuid4();\n  CpuProfilerBindings.startProfiling(profile_id);\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Profiling] started profiling transaction: ${transaction.name}`);\n\n  // set transaction context - do this regardless if profiling fails down the line\n  // so that we can still see the profile_id in the transaction context\n  return profile_id;\n}\n\n/**\n * Stops the profiler for profile_id and returns the profile\n * @param transaction\n * @param profile_id\n * @returns\n */\nexport function stopTransactionProfile(\n  transaction: Transaction,\n  profile_id: string | undefined,\n): ReturnType<(typeof CpuProfilerBindings)['stopProfiling']> | null {\n  // Should not happen, but satisfy the type checker and be safe regardless.\n  if (!profile_id) {\n    return null;\n  }\n\n  const profile = CpuProfilerBindings.stopProfiling(profile_id);\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Profiling] stopped profiling of transaction: ${transaction.name}`);\n\n  // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n  if (!profile) {\n    DEBUG_BUILD &&\n      logger.log(\n        // eslint-disable-next-line deprecation/deprecation\n        `[Profiling] profiler returned null profile for: ${transaction.name}`,\n        'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n      );\n    return null;\n  }\n\n  // Assign profile_id to the profile\n  profile.profile_id = profile_id;\n  return profile;\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfiling is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nexport function __PRIVATE__wrapStartTransactionWithProfiling(startTransaction: StartTransaction): StartTransaction {\n  return function wrappedStartTransaction(\n    this: Hub,\n    transactionContext: TransactionContext,\n    customSamplingContext?: CustomSamplingContext,\n  ): Transaction {\n    const transaction: Transaction = startTransaction.call(this, transactionContext, customSamplingContext);\n\n    // Client is required if we want to profile\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient() as NodeClient | undefined;\n    if (!client) {\n      return transaction;\n    }\n\n    // Check if we should profile this transaction. If a profile_id is returned, then profiling has been started.\n    const profile_id = maybeProfileTransaction(client, transaction, customSamplingContext);\n    if (!profile_id) {\n      return transaction;\n    }\n\n    // A couple of important things to note here:\n    // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n    // Whichever of the two (transaction.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n    // will be processed when the original transaction is finished. Since onProfileHandler can be invoked multiple times in the\n    // event of an error or user mistake (calling transaction.finish multiple times), it is important that the behavior of onProfileHandler\n    // is idempotent as we do not want any timings or profiles to be overriden by the last call to onProfileHandler.\n    // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n    let profile: ReturnType<(typeof CpuProfilerBindings)['stopProfiling']> | null = null;\n\n    const options = client.getOptions();\n    // Not intended for external use, hence missing types, but we want to profile a couple of things at Sentry that\n    // currently exceed the default timeout set by the SDKs.\n    const maxProfileDurationMs =\n      (options._experiments && options._experiments['maxProfileDurationMs']) || MAX_PROFILE_DURATION_MS;\n\n    // Enqueue a timeout to prevent profiles from running over max duration.\n    let maxDurationTimeoutID: NodeJS.Timeout | void = global.setTimeout(() => {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', transaction.name);\n\n      profile = stopTransactionProfile(transaction, profile_id);\n    }, maxProfileDurationMs);\n\n    // We need to reference the original finish call to avoid creating an infinite loop\n    // eslint-disable-next-line deprecation/deprecation\n    const originalFinish = transaction.finish.bind(transaction);\n\n    // Wrap the transaction finish method to stop profiling and set the profile on the transaction.\n    function profilingWrappedTransactionFinish(): void {\n      if (!profile_id) {\n        return originalFinish();\n      }\n\n      // We stop the handler first to ensure that the timeout is cleared and the profile is stopped.\n      if (maxDurationTimeoutID) {\n        global.clearTimeout(maxDurationTimeoutID);\n        maxDurationTimeoutID = undefined;\n      }\n\n      // onProfileHandler should always return the same profile even if this is called multiple times.\n      // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n      if (!profile) {\n        profile = stopTransactionProfile(transaction, profile_id);\n      }\n\n      // @ts-expect-error profile is not part of metadata\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setMetadata({ profile });\n      return originalFinish();\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.finish = profilingWrappedTransactionFinish;\n    return transaction;\n  };\n}\n\n/**\n * Patches startTransaction and stopTransaction with profiling logic.\n * This is used by the SDK's that do not support event hooks.\n * @private\n */\nfunction _addProfilingExtensionMethods(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    DEBUG_BUILD && logger.log(\"[Profiling] Can't find main carrier, profiling won't work.\");\n    return;\n  }\n\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions['startTransaction']) {\n    DEBUG_BUILD && logger.log('[Profiling] startTransaction does not exists, profiling will not work.');\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Profiling] startTransaction exists, patching it with profiling functionality...');\n\n  carrier.__SENTRY__.extensions['startTransaction'] = __PRIVATE__wrapStartTransactionWithProfiling(\n    // This is patched by sentry/tracing, we are going to re-patch it...\n    carrier.__SENTRY__.extensions['startTransaction'] as StartTransaction,\n  );\n}\n\n/**\n * This patches the global object and injects the Profiling extensions methods\n */\nexport function addProfilingExtensionMethods(): void {\n  _addProfilingExtensionMethods();\n}\n","import type { NodeClient } from '@sentry/node';\nimport type {\n  Event,\n  EventProcessor,\n  Hub,\n  Integration,\n  IntegrationFn,\n  IntegrationFnResult,\n  Transaction,\n} from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport {\n  MAX_PROFILE_DURATION_MS,\n  addProfilingExtensionMethods,\n  maybeProfileTransaction,\n  stopTransactionProfile,\n} from './hubextensions';\nimport type { Profile, RawThreadCpuProfile } from './types';\n\nimport {\n  addProfilesToEnvelope,\n  createProfilingEvent,\n  createProfilingEventEnvelope,\n  findProfiledTransactionsFromEnvelope,\n  isProfiledTransactionEvent,\n  maybeRemoveProfileFromSdkMetadata,\n} from './utils';\n\nconst MAX_PROFILE_QUEUE_LENGTH = 50;\nconst PROFILE_QUEUE: RawThreadCpuProfile[] = [];\nconst PROFILE_TIMEOUTS: Record<string, NodeJS.Timeout> = {};\n\nfunction addToProfileQueue(profile: RawThreadCpuProfile): void {\n  PROFILE_QUEUE.push(profile);\n\n  // We only want to keep the last n profiles in the queue.\n  if (PROFILE_QUEUE.length > MAX_PROFILE_QUEUE_LENGTH) {\n    PROFILE_QUEUE.shift();\n  }\n}\n\n/**\n * We need this integration in order to send data to Sentry. We hook into the event processor\n * and inspect each event to see if it is a transaction event and if that transaction event\n * contains a profile on it's metadata. If that is the case, we create a profiling event envelope\n * and delete the profile from the transaction metadata.\n *\n * @deprecated Use `nodeProfilingIntegration` instead.\n */\nexport class ProfilingIntegration implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string;\n  public getCurrentHub?: () => Hub;\n\n  public constructor() {\n    this.name = 'ProfilingIntegration';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.getCurrentHub = getCurrentHub;\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getCurrentHub().getClient() as NodeClient;\n\n    if (client && typeof client.on === 'function') {\n      client.on('startTransaction', (transaction: Transaction) => {\n        const profile_id = maybeProfileTransaction(client, transaction, undefined);\n\n        if (profile_id) {\n          const options = client.getOptions();\n          // Not intended for external use, hence missing types, but we want to profile a couple of things at Sentry that\n          // currently exceed the default timeout set by the SDKs.\n          const maxProfileDurationMs =\n            (options._experiments && options._experiments['maxProfileDurationMs']) || MAX_PROFILE_DURATION_MS;\n\n          if (PROFILE_TIMEOUTS[profile_id]) {\n            global.clearTimeout(PROFILE_TIMEOUTS[profile_id]);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete PROFILE_TIMEOUTS[profile_id];\n          }\n\n          // Enqueue a timeout to prevent profiles from running over max duration.\n          PROFILE_TIMEOUTS[profile_id] = global.setTimeout(() => {\n            DEBUG_BUILD &&\n              // eslint-disable-next-line deprecation/deprecation\n              logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', transaction.name);\n\n            const profile = stopTransactionProfile(transaction, profile_id);\n            if (profile) {\n              addToProfileQueue(profile);\n            }\n          }, maxProfileDurationMs);\n\n          // eslint-disable-next-line deprecation/deprecation\n          transaction.setContext('profile', { profile_id });\n          // @ts-expect-error profile_id is not part of the metadata type\n          // eslint-disable-next-line deprecation/deprecation\n          transaction.setMetadata({ profile_id: profile_id });\n        }\n      });\n\n      client.on('finishTransaction', transaction => {\n        // @ts-expect-error profile_id is not part of the metadata type\n        // eslint-disable-next-line deprecation/deprecation\n        const profile_id = transaction.metadata.profile_id;\n        if (profile_id && typeof profile_id === 'string') {\n          if (PROFILE_TIMEOUTS[profile_id]) {\n            global.clearTimeout(PROFILE_TIMEOUTS[profile_id]);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete PROFILE_TIMEOUTS[profile_id];\n          }\n          const profile = stopTransactionProfile(transaction, profile_id);\n\n          if (profile) {\n            addToProfileQueue(profile);\n          }\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope): void => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!PROFILE_QUEUE.length) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope: Profile[] = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const profileContext = profiledTransaction.contexts?.['profile'];\n          const profile_id = profileContext?.['profile_id'];\n\n          if (!profile_id) {\n            throw new TypeError('[Profiling] cannot find profile for a transaction without a profile context');\n          }\n\n          // Remove the profile from the transaction context before sending, relay will take care of the rest.\n          if (profileContext) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete profiledTransaction.contexts?.['profile'];\n          }\n\n          // We need to find both a profile and a transaction event for the same profile_id.\n          const profileIndex = PROFILE_QUEUE.findIndex(p => p.profile_id === profile_id);\n          if (profileIndex === -1) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          const cpuProfile = PROFILE_QUEUE[profileIndex];\n          if (!cpuProfile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          // Remove the profile from the queue.\n          PROFILE_QUEUE.splice(profileIndex, 1);\n          const profile = createProfilingEvent(cpuProfile, profiledTransaction);\n\n          if (client.emit && profile) {\n            const integrations =\n              client['_integrations'] && client['_integrations'] !== null && !Array.isArray(client['_integrations'])\n                ? Object.keys(client['_integrations'])\n                : undefined;\n\n            // @ts-expect-error bad overload due to unknown event\n            client.emit('preprocessEvent', profile, {\n              event_id: profiledTransaction.event_id,\n              integrations,\n            });\n          }\n\n          if (profile) {\n            profilesToAddToEnvelope.push(profile);\n          }\n        }\n\n        addProfilesToEnvelope(envelope, profilesToAddToEnvelope);\n      });\n    } else {\n      // Patch the carrier methods and add the event processor.\n      addProfilingExtensionMethods();\n      addGlobalEventProcessor(this.handleGlobalEvent.bind(this));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async handleGlobalEvent(event: Event): Promise<Event> {\n    if (this.getCurrentHub === undefined) {\n      return maybeRemoveProfileFromSdkMetadata(event);\n    }\n\n    if (isProfiledTransactionEvent(event)) {\n      // Client, Dsn and Transport are all required to be able to send the profiling event to Sentry.\n      // If either of them is not available, we remove the profile from the transaction event.\n      // and forward it to the next event processor.\n      const hub = this.getCurrentHub();\n\n      // eslint-disable-next-line deprecation/deprecation\n      const client = hub.getClient();\n\n      if (!client) {\n        DEBUG_BUILD &&\n          logger.log(\n            '[Profiling] getClient did not return a Client, removing profile from event and forwarding to next event processors.',\n          );\n        return maybeRemoveProfileFromSdkMetadata(event);\n      }\n\n      const dsn = client.getDsn();\n      if (!dsn) {\n        DEBUG_BUILD &&\n          logger.log(\n            '[Profiling] getDsn did not return a Dsn, removing profile from event and forwarding to next event processors.',\n          );\n        return maybeRemoveProfileFromSdkMetadata(event);\n      }\n\n      const transport = client.getTransport();\n      if (!transport) {\n        DEBUG_BUILD &&\n          logger.log(\n            '[Profiling] getTransport did not return a Transport, removing profile from event and forwarding to next event processors.',\n          );\n        return maybeRemoveProfileFromSdkMetadata(event);\n      }\n\n      // If all required components are available, we construct a profiling event envelope and send it to Sentry.\n      DEBUG_BUILD && logger.log('[Profiling] Preparing envelope and sending a profiling event');\n      const envelope = createProfilingEventEnvelope(event, dsn);\n\n      if (envelope) {\n        // Fire and forget, we don't want to block the main event processing flow.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        transport.send(envelope);\n      }\n    }\n\n    // Ensure sdkProcessingMetadata[\"profile\"] is removed from the event before forwarding it to the next event processor.\n    return maybeRemoveProfileFromSdkMetadata(event);\n  }\n}\n\n/**\n * We need this integration in order to send data to Sentry. We hook into the event processor\n * and inspect each event to see if it is a transaction event and if that transaction event\n * contains a profile on it's metadata. If that is the case, we create a profiling event envelope\n * and delete the profile from the transaction metadata.\n */\nexport const nodeProfilingIntegration = (() => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new ProfilingIntegration() as unknown as IntegrationFnResult;\n}) satisfies IntegrationFn;\n"],"names":["DEBUG_BUILD","familySync","_platform","_arch","getAbi","versions","resolve","env","join","threadId","isMainThread","Sentry.getCurrentHub"],"mappings":"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"}